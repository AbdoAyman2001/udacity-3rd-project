version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  browser-tools: circleci/browser-tools@1.4.0
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:14.15"
    steps:
      # install node and checkout code
      - node/install:
          node-version: '14.15'         
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      - run:
          name: Install API Dependencies
          command: |
            npm run api:install
      - run:
          name: Front-End Lint
          command: |
            npm run frontend:lint
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: API Build
          command: |
            npm run api:build  
  test:
    docker:
      # the base image can run most needed actions with orbs
      - image: cimg/node:16.13.0-browsers
    steps:
      # install node and checkout code
      - browser-tools/install-chrome
      # - browser-tools/install-browser-tools:
      #     chrome-version: 100.0.4896
      - browser-tools/install-chromedriver
      - checkout
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Testing Front-End 
          command: |
            npm run frontend:test 

############################   RUNNING E2E TESTING GIVE ERRORS DUE TO WRONG TESTING CODE #################
      # - run:
      #     name: Testing Front-End e2e
      #     command: |
      #       npm run frontend:e2e



  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '14.15' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: setup elastic beanstalk secrets
          command: |
            eb setenv AWS_BUCKET=$AWS_BUCKET
            eb setenv AWS_PROFILE=$AWS_PROFILE
            eb setenv AWS_REGION=$AWS_REGION
            eb setenv JWT_SECRET=$JWT_SECRET
            eb setenv PORT=$PORT
            eb setenv POSTGRES_DB=$POSTGRES_DB
            eb setenv POSTGRES_HOST=$POSTGRES_HOST
            eb setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME
      - run:
          name: Deploy App
          command: |
            npm run frontend:deploy
            npm run api:deploy
workflows:
  udagram:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          filters:
            branches:
              only: master        
          requires:
            - test